{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b62e315d-54dd-4810-9def-b911766537f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "from langchain_groq import ChatGroq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "141bba20-5ecf-4646-a692-1b77f321bf78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The first person to land on the moon was Neil Armstrong. He stepped onto the lunar surface on July 20, 1969, as part of the Apollo 11 mission.\n"
     ]
    }
   ],
   "source": [
    "llm = ChatGroq(\n",
    "    temperature=0, \n",
    "    groq_api_key='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', \n",
    "    model_name=\"llama-3.1-70b-versatile\"\n",
    ")\n",
    "response = llm.invoke(\"The first person to land on moon was ...\")\n",
    "print(response.content)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "19b7bba7-a298-4922-b336-2b67d53c5ae0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Collecting langchain-community\n",
      "  Downloading langchain_community-0.3.3-py3-none-any.whl.metadata (2.8 kB)\n",
      "Requirement already satisfied: PyYAML>=5.3 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-community) (6.0.1)\n",
      "Requirement already satisfied: SQLAlchemy<3,>=1.4 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-community) (2.0.30)\n",
      "Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-community) (3.9.5)\n",
      "Collecting dataclasses-json<0.7,>=0.5.7 (from langchain-community)\n",
      "  Downloading dataclasses_json-0.6.7-py3-none-any.whl.metadata (25 kB)\n",
      "Collecting langchain<0.4.0,>=0.3.4 (from langchain-community)\n",
      "  Downloading langchain-0.3.4-py3-none-any.whl.metadata (7.1 kB)\n",
      "Requirement already satisfied: langchain-core<0.4.0,>=0.3.12 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from langchain-community) (0.3.12)\n",
      "Requirement already satisfied: langsmith<0.2.0,>=0.1.125 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from langchain-community) (0.1.136)\n",
      "Requirement already satisfied: numpy<2.0.0,>=1.26.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-community) (1.26.4)\n",
      "Collecting pydantic-settings<3.0.0,>=2.4.0 (from langchain-community)\n",
      "  Downloading pydantic_settings-2.6.0-py3-none-any.whl.metadata (3.5 kB)\n",
      "Requirement already satisfied: requests<3,>=2 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-community) (2.32.2)\n",
      "Requirement already satisfied: tenacity!=8.4.0,<10,>=8.1.0 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from langchain-community) (9.0.0)\n",
      "Requirement already satisfied: aiosignal>=1.1.2 in c:\\programdata\\anaconda3\\lib\\site-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.2.0)\n",
      "Requirement already satisfied: attrs>=17.3.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (23.1.0)\n",
      "Requirement already satisfied: frozenlist>=1.1.1 in c:\\programdata\\anaconda3\\lib\\site-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.4.0)\n",
      "Requirement already satisfied: multidict<7.0,>=4.5 in c:\\programdata\\anaconda3\\lib\\site-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (6.0.4)\n",
      "Requirement already satisfied: yarl<2.0,>=1.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.9.3)\n",
      "Collecting marshmallow<4.0.0,>=3.18.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n",
      "  Downloading marshmallow-3.23.0-py3-none-any.whl.metadata (7.6 kB)\n",
      "Collecting typing-inspect<1,>=0.4.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n",
      "  Downloading typing_inspect-0.9.0-py3-none-any.whl.metadata (1.5 kB)\n",
      "Collecting langchain-text-splitters<0.4.0,>=0.3.0 (from langchain<0.4.0,>=0.3.4->langchain-community)\n",
      "  Downloading langchain_text_splitters-0.3.0-py3-none-any.whl.metadata (2.3 kB)\n",
      "Requirement already satisfied: pydantic<3.0.0,>=2.7.4 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from langchain<0.4.0,>=0.3.4->langchain-community) (2.9.2)\n",
      "Requirement already satisfied: jsonpatch<2.0,>=1.33 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-core<0.4.0,>=0.3.12->langchain-community) (1.33)\n",
      "Requirement already satisfied: packaging<25,>=23.2 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-core<0.4.0,>=0.3.12->langchain-community) (23.2)\n",
      "Requirement already satisfied: typing-extensions>=4.7 in c:\\programdata\\anaconda3\\lib\\site-packages (from langchain-core<0.4.0,>=0.3.12->langchain-community) (4.11.0)\n",
      "Requirement already satisfied: httpx<1,>=0.23.0 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from langsmith<0.2.0,>=0.1.125->langchain-community) (0.27.2)\n",
      "Requirement already satisfied: orjson<4.0.0,>=3.9.14 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from langsmith<0.2.0,>=0.1.125->langchain-community) (3.10.9)\n",
      "Requirement already satisfied: requests-toolbelt<2.0.0,>=1.0.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from langsmith<0.2.0,>=0.1.125->langchain-community) (1.0.0)\n",
      "Requirement already satisfied: python-dotenv>=0.21.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from pydantic-settings<3.0.0,>=2.4.0->langchain-community) (0.21.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\programdata\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain-community) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\programdata\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain-community) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\programdata\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain-community) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\programdata\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain-community) (2024.6.2)\n",
      "Requirement already satisfied: greenlet!=0.4.17 in c:\\programdata\\anaconda3\\lib\\site-packages (from SQLAlchemy<3,>=1.4->langchain-community) (3.0.1)\n",
      "Requirement already satisfied: anyio in c:\\programdata\\anaconda3\\lib\\site-packages (from httpx<1,>=0.23.0->langsmith<0.2.0,>=0.1.125->langchain-community) (4.2.0)\n",
      "Requirement already satisfied: httpcore==1.* in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from httpx<1,>=0.23.0->langsmith<0.2.0,>=0.1.125->langchain-community) (1.0.6)\n",
      "Requirement already satisfied: sniffio in c:\\programdata\\anaconda3\\lib\\site-packages (from httpx<1,>=0.23.0->langsmith<0.2.0,>=0.1.125->langchain-community) (1.3.0)\n",
      "Requirement already satisfied: h11<0.15,>=0.13 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from httpcore==1.*->httpx<1,>=0.23.0->langsmith<0.2.0,>=0.1.125->langchain-community) (0.14.0)\n",
      "Requirement already satisfied: jsonpointer>=1.9 in c:\\programdata\\anaconda3\\lib\\site-packages (from jsonpatch<2.0,>=1.33->langchain-core<0.4.0,>=0.3.12->langchain-community) (2.1)\n",
      "Requirement already satisfied: annotated-types>=0.6.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from pydantic<3.0.0,>=2.7.4->langchain<0.4.0,>=0.3.4->langchain-community) (0.6.0)\n",
      "Requirement already satisfied: pydantic-core==2.23.4 in c:\\users\\hp\\appdata\\roaming\\python\\python312\\site-packages (from pydantic<3.0.0,>=2.7.4->langchain<0.4.0,>=0.3.4->langchain-community) (2.23.4)\n",
      "Requirement already satisfied: mypy-extensions>=0.3.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.5.7->langchain-community) (1.0.0)\n",
      "Downloading langchain_community-0.3.3-py3-none-any.whl (2.4 MB)\n",
      "   ---------------------------------------- 0.0/2.4 MB ? eta -:--:--\n",
      "   - -------------------------------------- 0.1/2.4 MB 2.2 MB/s eta 0:00:02\n",
      "   ---- ----------------------------------- 0.3/2.4 MB 3.2 MB/s eta 0:00:01\n",
      "   ------- -------------------------------- 0.4/2.4 MB 3.3 MB/s eta 0:00:01\n",
      "   ---------- ----------------------------- 0.6/2.4 MB 3.5 MB/s eta 0:00:01\n",
      "   -------------- ------------------------- 0.8/2.4 MB 3.8 MB/s eta 0:00:01\n",
      "   ------------------ --------------------- 1.1/2.4 MB 4.0 MB/s eta 0:00:01\n",
      "   ---------------------- ----------------- 1.3/2.4 MB 4.2 MB/s eta 0:00:01\n",
      "   -------------------------- ------------- 1.6/2.4 MB 4.3 MB/s eta 0:00:01\n",
      "   ------------------------------- -------- 1.9/2.4 MB 4.4 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 2.2/2.4 MB 4.6 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 2.4/2.4 MB 4.7 MB/s eta 0:00:00\n",
      "Downloading dataclasses_json-0.6.7-py3-none-any.whl (28 kB)\n",
      "Downloading langchain-0.3.4-py3-none-any.whl (1.0 MB)\n",
      "   ---------------------------------------- 0.0/1.0 MB ? eta -:--:--\n",
      "   ------------- -------------------------- 0.3/1.0 MB 7.0 MB/s eta 0:00:01\n",
      "   ---------------------------- ----------- 0.7/1.0 MB 7.6 MB/s eta 0:00:01\n",
      "   ---------------------------------------  1.0/1.0 MB 7.9 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 1.0/1.0 MB 7.1 MB/s eta 0:00:00\n",
      "Downloading pydantic_settings-2.6.0-py3-none-any.whl (28 kB)\n",
      "Downloading langchain_text_splitters-0.3.0-py3-none-any.whl (25 kB)\n",
      "Downloading marshmallow-3.23.0-py3-none-any.whl (49 kB)\n",
      "   ---------------------------------------- 0.0/49.5 kB ? eta -:--:--\n",
      "   ---------------------------------------- 49.5/49.5 kB 2.5 MB/s eta 0:00:00\n",
      "Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n",
      "Installing collected packages: typing-inspect, marshmallow, dataclasses-json, pydantic-settings, langchain-text-splitters, langchain, langchain-community\n",
      "Successfully installed dataclasses-json-0.6.7 langchain-0.3.4 langchain-community-0.3.3 langchain-text-splitters-0.3.0 marshmallow-3.23.0 pydantic-settings-2.6.0 typing-inspect-0.9.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  WARNING: The script langchain-server.exe is installed in 'C:\\Users\\HP\\AppData\\Roaming\\Python\\Python312\\Scripts' which is not on PATH.\n",
      "  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n"
     ]
    }
   ],
   "source": [
    "pip install langchain-community\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c4d734e8-59b0-4755-8ad0-38b490c27d44",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "USER_AGENT environment variable not set, consider setting it to identify your requests.\n"
     ]
    }
   ],
   "source": [
    "from langchain_community.document_loaders import WebBaseLoader"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "361a732f-9489-42eb-8226-361ff9533b06",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Search JobsSkip navigationSearch JobsNIKE, INC. JOBSContract JobsJoin The Talent CommunityLife @ NikeOverviewBenefitsBrandsOverviewJordanConverseTeamsOverviewAdministrative SupportAdvanced InnovationAir Manufacturing InnovationAviationCommunicationsCustomer ServiceDesignDigitalFacilitiesFinance & AccountingGovernment & Public AffairsHuman ResourcesInsights & AnalyticsLegalManufacturing & EngineeringMarketingMerchandisingPlanningPrivacyProcurementProduct Creation, Development & ManagementRetail CorporateRetail StoresSalesSocial & Community ImpactSports MarketingStrategic PlanningSupply Chain, Distribution & LogisticsSustainabilityTechnologyLocationsOverviewNike WHQNike New York HQEHQ: Hilversum, The NetherlandsELC: Laakdal, BelgiumGreater China HQDiversity, Equity & InclusionOverviewMilitary InclusionDisability InclusionIndigenous InclusionInternshipsFIND A STOREBECOME A MEMBERSIGN UP FOR EMAILSEND US FEEDBACKSTUDENT DISCOUNTSGET HELPGET HELPOrder StatusDeliveryReturnsPayment OptionsContact Us On Nike.com InquiriesContact Us On All Other InquiriesABOUT NIKEABOUT NIKENewsCareersInvestorsSustainabilityIndia© 2024 Nike, Inc. All Rights ReservedGuidesNike AdaptNike Air MaxNike FlyleatherNike PegasusNike Zoom FlyNike AirNike FlyEaseNike FreeNike ReactNike ZoomXNike Air Force 1Nike FlyknitNike JoyrideNike VaporflyTerms of SaleTerms of UseNike Privacy Policy\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "loader = WebBaseLoader(\"https://jobs.nike.com/job/R-33460\")\n",
    "page_data = loader.load().pop().page_content\n",
    "print(page_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9146b72d-b50b-4b8d-8403-ce0f657778b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from langchain_core.prompts import PromptTemplate\n",
    "\n",
    "prompt_extract = PromptTemplate.from_template(\n",
    "        \"\"\"\n",
    "        ### SCRAPED TEXT FROM WEBSITE:\n",
    "        {page_data}\n",
    "        ### INSTRUCTION:\n",
    "        The scraped text is from the career's page of a website.\n",
    "        Your job is to extract the job postings and return them in JSON format containing the \n",
    "        following keys: `role`, `experience`, `skills` and `description`.\n",
    "        Only return the valid JSON.\n",
    "        ### VALID JSON (NO PREAMBLE):    \n",
    "        \"\"\"\n",
    ")\n",
    "\n",
    "chain_extract = prompt_extract | llm \n",
    "res = chain_extract.invoke(input={'page_data':page_data})\n",
    "type(res.content)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d4990a1f-9f55-49b0-84ea-fea3ef3bbb0f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'role': 'Administrative Support',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Advanced Innovation',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Air Manufacturing Innovation',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Aviation', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Communications', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Customer Service',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Design', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Digital', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Facilities', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Finance & Accounting',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Government & Public Affairs',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Human Resources',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Insights & Analytics',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Legal', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Manufacturing & Engineering',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Marketing', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Merchandising', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Planning', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Privacy', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Procurement', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Product Creation, Development & Management',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Retail Corporate',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Retail Stores', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Sales', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Social & Community Impact',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Sports Marketing',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Strategic Planning',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Supply Chain, Distribution & Logistics',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Sustainability', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Technology', 'experience': '', 'skills': '', 'description': ''}]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from langchain_core.output_parsers import JsonOutputParser\n",
    "\n",
    "json_parser = JsonOutputParser()\n",
    "json_res = json_parser.parse(res.content)\n",
    "json_res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "90ea9fab-bd34-4745-944e-d7a8f2bcbdb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(json_res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "edba99a3-79f4-498c-89fb-a1263a0dc2b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Techstack</th>\n",
       "      <th>Links</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>React, Node.js, MongoDB</td>\n",
       "      <td>https://example.com/react-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Angular, .NET, SQL Server</td>\n",
       "      <td>https://example.com/angular-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Vue.js, Ruby on Rails, PostgreSQL</td>\n",
       "      <td>https://example.com/vue-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Python, Django, MySQL</td>\n",
       "      <td>https://example.com/python-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Java, Spring Boot, Oracle</td>\n",
       "      <td>https://example.com/java-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Flutter, Firebase, GraphQL</td>\n",
       "      <td>https://example.com/flutter-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>WordPress, PHP, MySQL</td>\n",
       "      <td>https://example.com/wordpress-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Magento, PHP, MySQL</td>\n",
       "      <td>https://example.com/magento-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>React Native, Node.js, MongoDB</td>\n",
       "      <td>https://example.com/react-native-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>iOS, Swift, Core Data</td>\n",
       "      <td>https://example.com/ios-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Android, Java, Room Persistence</td>\n",
       "      <td>https://example.com/android-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Kotlin, Android, Firebase</td>\n",
       "      <td>https://example.com/kotlin-android-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Android TV, Kotlin, Android NDK</td>\n",
       "      <td>https://example.com/android-tv-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>iOS, Swift, ARKit</td>\n",
       "      <td>https://example.com/ios-ar-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Cross-platform, Xamarin, Azure</td>\n",
       "      <td>https://example.com/xamarin-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Backend, Kotlin, Spring Boot</td>\n",
       "      <td>https://example.com/kotlin-backend-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Frontend, TypeScript, Angular</td>\n",
       "      <td>https://example.com/typescript-frontend-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Full-stack, JavaScript, Express.js</td>\n",
       "      <td>https://example.com/full-stack-js-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Machine Learning, Python, TensorFlow</td>\n",
       "      <td>https://example.com/ml-python-portfolio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>DevOps, Jenkins, Docker</td>\n",
       "      <td>https://example.com/devops-portfolio</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               Techstack  \\\n",
       "0                React, Node.js, MongoDB   \n",
       "1              Angular, .NET, SQL Server   \n",
       "2      Vue.js, Ruby on Rails, PostgreSQL   \n",
       "3                  Python, Django, MySQL   \n",
       "4              Java, Spring Boot, Oracle   \n",
       "5             Flutter, Firebase, GraphQL   \n",
       "6                  WordPress, PHP, MySQL   \n",
       "7                    Magento, PHP, MySQL   \n",
       "8         React Native, Node.js, MongoDB   \n",
       "9                  iOS, Swift, Core Data   \n",
       "10       Android, Java, Room Persistence   \n",
       "11             Kotlin, Android, Firebase   \n",
       "12       Android TV, Kotlin, Android NDK   \n",
       "13                     iOS, Swift, ARKit   \n",
       "14        Cross-platform, Xamarin, Azure   \n",
       "15          Backend, Kotlin, Spring Boot   \n",
       "16         Frontend, TypeScript, Angular   \n",
       "17    Full-stack, JavaScript, Express.js   \n",
       "18  Machine Learning, Python, TensorFlow   \n",
       "19               DevOps, Jenkins, Docker   \n",
       "\n",
       "                                                Links  \n",
       "0                 https://example.com/react-portfolio  \n",
       "1               https://example.com/angular-portfolio  \n",
       "2                   https://example.com/vue-portfolio  \n",
       "3                https://example.com/python-portfolio  \n",
       "4                  https://example.com/java-portfolio  \n",
       "5               https://example.com/flutter-portfolio  \n",
       "6             https://example.com/wordpress-portfolio  \n",
       "7               https://example.com/magento-portfolio  \n",
       "8          https://example.com/react-native-portfolio  \n",
       "9                   https://example.com/ios-portfolio  \n",
       "10              https://example.com/android-portfolio  \n",
       "11       https://example.com/kotlin-android-portfolio  \n",
       "12           https://example.com/android-tv-portfolio  \n",
       "13               https://example.com/ios-ar-portfolio  \n",
       "14              https://example.com/xamarin-portfolio  \n",
       "15       https://example.com/kotlin-backend-portfolio  \n",
       "16  https://example.com/typescript-frontend-portfolio  \n",
       "17        https://example.com/full-stack-js-portfolio  \n",
       "18            https://example.com/ml-python-portfolio  \n",
       "19               https://example.com/devops-portfolio  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv(\"my_portfolio.csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "074bfa27-fec8-44ed-9b38-faeaee684b6c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import uuid\n",
    "import chromadb\n",
    "\n",
    "client = chromadb.PersistentClient('vectorstore')\n",
    "collection = client.get_or_create_collection(name=\"portfolio\")\n",
    "\n",
    "if not collection.count():\n",
    "    for _, row in df.iterrows():\n",
    "        collection.add(documents=row[\"Techstack\"],\n",
    "                       metadatas={\"links\": row[\"Links\"]},\n",
    "                       ids=[str(uuid.uuid4())])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "6d2a7e99-1eae-4af7-b642-19cda114fca7",
   "metadata": {},
   "outputs": [],
   "source": [
    "links = collection.query(query_texts=job[0]['skills'], n_results=2).get('metadatas', [])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3f2189f0-c754-41d9-933c-9e893a57b436",
   "metadata": {},
   "outputs": [],
   "source": [
    "all_links = []\n",
    "for j in job:\n",
    "    links = collection.query(query_texts=j['skills'], n_results=2).get('metadatas', [])\n",
    "    all_links.append(links)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "fb4184bf-ea66-411e-adb5-2076b1b5e896",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'role': 'Administrative Support',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Advanced Innovation',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Air Manufacturing Innovation',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Aviation', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Communications', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Customer Service',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Design', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Digital', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Facilities', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Finance & Accounting',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Government & Public Affairs',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Human Resources',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Insights & Analytics',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Legal', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Manufacturing & Engineering',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Marketing', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Merchandising', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Planning', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Privacy', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Procurement', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Product Creation, Development & Management',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Retail Corporate',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Retail Stores', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Sales', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Social & Community Impact',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Sports Marketing',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Strategic Planning',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Supply Chain, Distribution & Logistics',\n",
       "  'experience': '',\n",
       "  'skills': '',\n",
       "  'description': ''},\n",
       " {'role': 'Sustainability', 'experience': '', 'skills': '', 'description': ''},\n",
       " {'role': 'Technology', 'experience': '', 'skills': '', 'description': ''}]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "job"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "3bbcc4e2-22d2-4964-b0e9-6425cd527195",
   "metadata": {},
   "outputs": [],
   "source": [
    "job = json_res  # Assuming json_res is a list of dictionaries\n",
    "all_skills = [j['skills'] for j in job]  # Extracting 'skills' from each job\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "68f0e6a6-f4a3-491c-b016-326ab5557eb7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for j in job:\n",
    "    print(j['skills'])  # Accessing the 'skills' key from each dictionary in the list\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9bdba9e6-fcb6-4067-b0fc-4c4aa13fc4fb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Subject: Unlock Efficiency and Scalability with AtliQ's Expertise\n",
      "\n",
      "Dear Hiring Manager,\n",
      "\n",
      "I came across your job postings and was impressed by the diverse range of roles you're looking to fill. As a Business Development Executive at AtliQ, I'd like to introduce you to our company's capabilities in providing tailored solutions to empower your business.\n",
      "\n",
      "At AtliQ, we specialize in facilitating seamless integration of business processes through automated tools, leveraging AI and software consulting expertise. Our experience has shown that our solutions can foster scalability, process optimization, cost reduction, and heightened overall efficiency.\n",
      "\n",
      "Given the breadth of roles you're looking to fill, I'd like to highlight our expertise in areas such as:\n",
      "\n",
      "* Digital Transformation: Our team can help you streamline processes, enhance customer experience, and drive business growth through digital solutions.\n",
      "* Technology: We can support your technology needs, from software development to data analytics, and ensure that your systems are integrated and efficient.\n",
      "* Manufacturing & Engineering: Our expertise in automation and process optimization can help you improve productivity, reduce costs, and enhance product quality.\n",
      "* Supply Chain, Distribution & Logistics: We can help you optimize your supply chain operations, improve inventory management, and enhance logistics efficiency.\n",
      "\n",
      "To give you a glimpse into our portfolio, I'd like to share a few examples of our work:\n",
      "\n",
      "* Android TV Portfolio: [https://example.com/android-tv-portfolio](https://example.com/android-tv-portfolio)\n",
      "* Kotlin Backend Portfolio: [https://example.com/kotlin-backend-portfolio](https://example.com/kotlin-backend-portfolio)\n",
      "\n",
      "These examples demonstrate our ability to deliver innovative solutions that drive business results. I'd love to discuss how AtliQ can support your organization's specific needs and goals.\n",
      "\n",
      "If you're interested in learning more, I'd be happy to schedule a call to explore how we can help.\n",
      "\n",
      "Best regards,\n",
      "\n",
      "Mohan\n",
      "Business Development Executive\n",
      "AtliQ\n"
     ]
    }
   ],
   "source": [
    "prompt_email = PromptTemplate.from_template(\n",
    "        \"\"\"\n",
    "        ### JOB DESCRIPTION:\n",
    "        {job_description}\n",
    "        \n",
    "        ### INSTRUCTION:\n",
    "        You are Mohan, a business development executive at AtliQ. AtliQ is an AI & Software Consulting company dedicated to facilitating\n",
    "        the seamless integration of business processes through automated tools. \n",
    "        Over our experience, we have empowered numerous enterprises with tailored solutions, fostering scalability, \n",
    "        process optimization, cost reduction, and heightened overall efficiency. \n",
    "        Your job is to write a cold email to the client regarding the job mentioned above describing the capability of AtliQ \n",
    "        in fulfilling their needs.\n",
    "        Also add the most relevant ones from the following links to showcase Atliq's portfolio: {link_list}\n",
    "        Remember you are Mohan, BDE at AtliQ. \n",
    "        Do not provide a preamble.\n",
    "        ### EMAIL (NO PREAMBLE):\n",
    "        \n",
    "        \"\"\"\n",
    "        )\n",
    "\n",
    "chain_email = prompt_email | llm\n",
    "res = chain_email.invoke({\"job_description\": str(job), \"link_list\": links})\n",
    "print(res.content)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9cc85d7-7d6b-4361-9d88-7b39fbe566a7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
